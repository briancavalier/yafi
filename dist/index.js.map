{"version":3,"file":null,"sources":["../src/fn.js","../src/FutureValue.js","../src/kill.js","../src/Task.js"],"sourcesContent":["// FP & Typeclass delegation helpers\n\nexport const compose = (g, f) =>\n  x => g(f(x))\n\nexport const map = (f, a) =>\n  a && typeof a.map === 'function' ? a.map(f) : f(a)\n\nexport const lift2 = (f, a, b) =>\n  ap(map(a => b => f(a, b), a), b)\n\nexport const ap = (ab, a) =>\n  typeof ab.ap === 'function' ? ab.ap(a)\n    : typeof ab === 'function' ? x => ab(x)(a(x))\n    : ab.reduce((acc, f) => concat(acc, map(f, a)), [])\n\nexport const apply = (f, a) =>\n  f(a)\n\nexport const apply2 = (f, a, b) =>\n  f(a, b)\n\nexport const concat = (a, b) => {\n  console.log(a, b)\n  return a.concat(b)\n}\n","import * as F from './fn'\n\n// Conceptually, a FutureValue is a value that becomes known\n// at a specific time (the temperature outside next Tuesday at 5pm).\n// Neither the time nor value can be known until the time arrives.\n// Mechanically, it's a write-once, immutable container for a\n// (time, value) pair, that allows zero or more awaiters.\nexport class FutureValue {\n  constructor (time, value) {\n    this.time = time\n    this.value = value\n    this._action = undefined\n    this._length = 0\n  }\n\n  static of (x) {\n    return of(x)\n  }\n\n  of (x) {\n    return of(x)\n  }\n\n  static empty () {\n    return never\n  }\n\n  empty () {\n    return never\n  }\n\n  concat (fv) {\n    return lift2(F.concat, this, fv)\n  }\n\n  or (fv) {\n    return earliest(preferLeft, this, fv)\n  }\n\n  map (f) {\n    return map(f, this)\n  }\n\n  extend (f) {\n    return extend(f, this)\n  }\n\n  toString () {\n    return `${this.constructor.name} { time: ${this.time}, value: ${this.value} }`\n  }\n\n  write (t, x) {\n    setFuture(t, x, this)\n    return this\n  }\n}\n\n// pending :: () -> FutureValue t a\n// Create a new FutureValue whose value isn't known yet\nexport const pending = () => at(Infinity, undefined)\n\n// at :: Time -> a -> FutureValue t a\n// Create a new FutureValue whose value arrived at time t\nconst at = (t, x) => new FutureValue(t, x)\n\n// of :: a -> FutureValue a\n// Create a FutureValue whose value has always been known to be x\nconst of = x => at(0, x)\n\nexport const never = new (class Never extends FutureValue {\n  constructor () {\n    super(Infinity, undefined)\n  }\n\n  concat (fv) {\n    return this\n  }\n\n  or (fv) {\n    return fv\n  }\n\n  map (f) {\n    return this\n  }\n\n  extend (f) {\n    return this\n  }\n\n  write (t, x) {\n    throw new Error('Can\\'t write never')\n  }\n})()\n\nconst lift2 = (f, fv1, fv2) =>\n  fv1.time < Infinity && fv2.time < Infinity\n    ? at(Math.max(fv1.time, fv2.time), f(fv1.value, fv2.value))\n    : whenLift2(f, fv1, fv2, pending())\n\nconst whenLift2 = (f, fv1, fv2, futureResult) => {\n  const awaitBoth = new AwaitBoth(f, fv1, fv2, futureResult)\n  when(awaitBoth, fv1)\n  when(awaitBoth, fv2)\n  return futureResult\n}\n\nclass AwaitBoth {\n  constructor (f, fv1, fv2, future) {\n    this.count = 2\n    this.f = f\n    this.future = future\n    this.fv1 = fv1\n    this.fv2 = fv2\n  }\n\n  run (fv) {\n    if (--this.count === 0) {\n      const f = this.f\n      this.future.write(fv.time, f(this.fv1.value, this.fv2.value))\n    }\n  }\n}\n\nconst map = (f, future) =>\n  future.time < Infinity\n    ? at(future.time, F.map(f, future.value))\n    : mapWhen(f, future, pending())\n\nfunction mapWhen (f, future, futureResult) {\n  when(new Map(f, futureResult), future)\n  return futureResult\n}\n\nclass Map {\n  constructor (f, future) {\n    this.f = f\n    this.future = future\n  }\n\n  run ({ time, value }) {\n    this.future.write(time, F.map(this.f, value))\n  }\n}\n\nconst extend = (f, future) =>\n  future.time < Infinity\n    ? at(future.time, f(future))\n    : extendWhen(f, future, pending())\n\nfunction extendWhen (f, future, futureResult) {\n  when(new Extend(f, futureResult), future)\n  return futureResult\n}\n\nclass Extend {\n  constructor (f, future) {\n    this.f = f\n    this.future = future\n  }\n\n  run (fv) {\n    const f = this.f\n    this.future.write(fv.time, f(fv))\n  }\n}\n\n// Return a FutureValue that is equivalent to the earlier of\n// two FutureValue\nexport const earliest = (breakTie, fv1, fv2) =>\n  fv1.time === Infinity && fv2.time === Infinity\n    ? earliestWhen(breakTie, fv1, fv2, pending()) // both pending\n    : earliestOf(breakTie, fv1, fv2) // one isn't pending\n\nconst earliestWhen = (breakTie, fv1, fv2, futureResult) => {\n  const race = new Earliest(breakTie, fv1, fv2, futureResult)\n  when(race, fv1)\n  when(race, fv2)\n  return futureResult\n}\n\nconst earliestOf = (breakTie, fv1, fv2) =>\n  fv1.time === fv2.time\n    ? breakTie(fv1, fv2) ? fv1 : fv2\n    : fv1.time < fv2.time ? fv1 : fv2\n\nconst preferLeft = () => true\n\nclass Earliest {\n  constructor (breakTie, fv1, fv2, future) {\n    this.breakTie = breakTie\n    this.fv1 = fv1\n    this.fv2 = fv2\n    this.future = future\n  }\n\n  run (fv) {\n    const { time, value } = earliestOf(this.breakTie, this.fv1, this.fv2)\n    this.future.write(time, value)\n  }\n}\n\n// Add an action to the awaiters for the provided future\n// or execute it immediately if the future's value is known\nfunction when (action, future) {\n  if (future.time < Infinity) {\n    action.run(future)\n  } if (future._action === undefined) {\n    future._action = action\n  } else {\n    future[future._length++] = action\n  }\n}\n\n// Run all the awaiting actions when a future value is set\nfunction runActions (future) {\n  future._action.run(future)\n  future._action = undefined\n\n  for (let i = 0; i < future._length; ++i) {\n    future[i].run(future)\n    future[i] = undefined\n  }\n}\n\n// Set the time and value of a pending future, triggering all awaiters\nfunction setFuture (t, x, future) {\n  if (future.time < Infinity) {\n    throw new Error('FutureValue already written')\n  }\n\n  future.time = t\n  future.value = x\n\n  if (future._action === undefined) {\n    return\n  }\n\n  runActions(future)\n}\n","// Create a kill that will call the provided kill function\n// with the provided key.\n// const timer = killWith(clearTimeout, setTimeout(timerFunc, ms))\n// timer.kill() // timerFunc won't be called\n\nexport const killWith = (kill, key) => new KillWith(kill, key)\n\nclass KillWith {\n  constructor (kill, key) {\n    this._kill = kill\n    this.key = key\n  }\n\n  kill () {\n    const kill = this._kill\n    return kill(this.key)\n  }\n}\n\n// Combine two kills into a new one that kills both\nexport const killBoth = (kill1, kill2) => new KillBoth(kill1, kill2)\n\nclass KillBoth {\n  constructor (kill1, kill2) {\n    this.kill1 = kill1\n    this.kill2 = kill2\n  }\n\n  kill () {\n    this.kill1.kill()\n    this.kill2.kill()\n  }\n}\n\nexport const neverKill = new (class NeverKill {\n  kill () {}\n})()\n","import { pending } from './FutureValue'\nimport { killBoth, neverKill } from './kill'\nimport * as F from './fn'\n\n// run :: Task a -> (KillFunc, FutureValue a)\n// Execute a Task that will produce a result.  Returns a function to\n// kill the in-progress Task and a FutureValue representing the\n// eventual result.\nexport const runTask = task => {\n  const futureValue = pending()\n  const kill = task.run(Date.now, new SetFutureValue(futureValue))\n  return [kill, futureValue]\n}\n\n// task :: ((a -> ()) -> Kill) -> Task a\n// Create a Task that will produce a result by running a function\nexport const task = run =>\n  new Task(resolver, run)\n\n// of :: a -> Task a\n// Create a Task whose result is x\nexport const of = x =>\n  new Task(just, x)\n\n// race :: Task a -> Task a -> Task a\n// Given two Tasks, return a Task equivalent to the one that produces a\n// value earlier, and kill the other Task.\nexport const race = (t1, t2) =>\n  new Task(raceTasks, { t1, t2 })\n\n// lift2 :: (a -> b -> c) -> Task a -> Task b -> Task c\n// Combine the results of 2 tasks\nexport const lift2 = (abc, ta, tb) =>\n  lift2With(F.lift2, abc, ta, tb)\n\nconst lift2With = (apply, abc, ta, tb) =>\n  new Task(lift2Tasks, { apply, abc, ta, tb })\n\n// Task type\n// A composable unit of async work that produces a FutureValue\nexport class Task {\n  constructor (runTask, state) {\n    this.runTask = runTask\n    this.state = state\n  }\n\n  static of (x) {\n    return of(x)\n  }\n\n  of (x) {\n    return of(x)\n  }\n\n  static empty () {\n    return neverTask\n  }\n\n  empty () {\n    return neverTask\n  }\n\n  map (ab) {\n    return new Task(mapTask, { ab, task: this })\n  }\n\n  ap (tfab) {\n    return lift2(F.apply, tfab, this)\n  }\n\n  chain (atb) {\n    return new Task(chainTask, { atb, task: this })\n  }\n\n  concat (t2) {\n    return lift2With(F.apply2, F.concat, this, t2)\n  }\n\n  extend (tab) {\n    return new Task(extendTask, { tab, task: this })\n  }\n\n  run (now, action) {\n    return this.runTask(now, action, this.state)\n  }\n\n  toString () {\n    return `Task { runTask: ${this.runTask}, state: ${this.state} }`\n  }\n}\n\nconst neverTask = new (class NeverTask extends Task {\n  constructor () {\n    super(undefined, undefined)\n  }\n\n  map (ab) {\n    return this\n  }\n\n  ap (tfab) {\n    return this\n  }\n\n  chain (atb) {\n    return this\n  }\n\n  concat (t) {\n    return this\n  }\n\n  extend (tab) {\n    return this\n  }\n\n  run (now, action) {\n    return neverKill\n  }\n\n  toString () {\n    return 'NeverTask {}'\n  }\n})()\n\n// a Task whose result is already known\nconst just = (now, action, x) =>\n  action.react(0, x)\n\n// Run a callback-accepting function to produce a result\nconst resolver = (now, action, run) =>\n  run(x => action.react(now(), x))\n\nclass SetFutureValue {\n  constructor (futureValue) {\n    this.futureValue = futureValue\n  }\n\n  react (t, x) {\n    return this.futureValue.write(t, x)\n  }\n}\n\n// A Task whose value is the mapped result of another Task\nconst mapTask = (now, action, { ab, task }) =>\n  task.run(now, new Mapped(ab, action))\n\nclass Mapped {\n  constructor (ab, action) {\n    this.ab = ab\n    this.action = action\n  }\n\n  react (t, x) {\n    return this.action.react(t, F.map(this.ab, x))\n  }\n}\n\n// Task that appends more work to another Task, taking the\n// previous Task's output as input\nconst chainTask = (now, action, { atb, task }) => {\n  const unlessKilled = new UnlessKilled(action)\n  return killBoth(unlessKilled, task.run(now, new Chained(now, atb, unlessKilled)))\n}\n\nclass Chained {\n  constructor (now, atb, action) {\n    this.now = now\n    this.atb = atb\n    this.action = action\n  }\n\n  react (t, x) {\n    const atb = this.atb\n    return atb(x).run(this.now, this.action)\n  }\n}\n\nclass UnlessKilled {\n  constructor (action) {\n    this.action = action\n  }\n\n  react (t, x) {\n    return this.action.react(t, x)\n  }\n\n  kill () {\n    this.action = emptyAction\n  }\n}\n\nconst emptyAction = {\n  react (t, x) {}\n}\n\nconst raceTasks = (now, action, { t1, t2 }) => {\n  const r1 = new Raced(action)\n  const r2 = new Raced(action)\n  r2.kill = t1.run(now, r1)\n  r1.kill = t2.run(now, r2)\n\n  return killBoth(r1.kill, r2.kill)\n}\n\nclass Raced {\n  constructor (action) {\n    this.kill = neverKill\n    this.action = action\n  }\n\n  react (t, x) {\n    this.kill.kill()\n    this.action.react(t, x)\n  }\n}\n\nconst lift2Tasks = (now, action, { apply, abc, ta, tb }) => {\n  // TODO: find a better way\n  // Kinda gross: closing over too much and allocating 2 objects\n  let count = 2\n  const check = t =>\n    --count === 0 && action.react(t, apply(abc, a.value, b.value))\n\n  const a = new LiftVar(check)\n  const b = new LiftVar(check)\n\n  return killBoth(ta.run(now, a), tb.run(now, b))\n}\n\n// mutable container to hold task results for in-flight\n// liftN operations\nclass LiftVar {\n  constructor (check) {\n    this.check = check\n    this.value = undefined\n  }\n\n  react (t, x) {\n    this.value = x\n    return this.check(t)\n  }\n}\n\nconst extendTask = (now, action, { tab, task }) =>\n  task.run(now, new Extend(tab, action))\n\nclass Extend {\n  constructor (tab, action) {\n    this.tab = tab\n    this.action = action\n  }\n\n  react (t, x) {\n    const tab = this.tab\n    return this.action.react(t, tab(of(x)))\n  }\n}\n"],"names":["const","map","lift2","ap","concat","of","F.concat","extend","super","F.map","Extend","let","F.lift2","apply","F.apply","F.apply2"],"mappings":"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"}